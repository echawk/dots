#!/bin/sh

#usage:
#volctrl i/d/m  (increase/decrease/mute)

USAGE_S="No action provided!\n'i' - increase\n'd' - decrease\n'm' - toggle mute\n's' - set a specifc level\n"

pa_h() {
    command -v pactl || exit 1
    [ -n "$2" ] && percent="$2"
    case $1 in
        # do a check to make sure the volume is less than 100
        i) lt_100 && pactl set-sink-volume 0 +"${percent:-5}"% && exit 0 ;;
        d) pactl set-sink-volume 0 -"${percent:-5}"% && exit 0 ;;
        m) pactl set-sink-mute 0 toggle && exit 0 ;;
        s) pactl set-sink-volume 0 "${percent:-50}"% && exit 0 ;;
        *) exit 1 ;;
    esac
}

a_h() {
    command -v amixer || exit 1
    [ -n "$2" ] && percent="$2"
    case $1 in
        # do a check to make sure the volume is less than 100
        i) lt_100 && amixer set Master Front "${percent:-5}"+ && exit 0 ;;
        d) amixer set Master Front "${percent:-5}"- && exit 0 ;;
        m) amixer set Master toggle && exit 0 ;;
        s) amixer set Master Front "${percent:-50}" && exit 0 ;;
        *) exit 1 ;;
    esac
}

pw_h() {
    command -v wpctl || exit 1
    [ -n "$2" ] && percent="$2"
    case $1 in
        i) lt_100 && wpctl set-volume @DEFAULT_AUDIO_SINK@ "${percent:-5}"%+ && exit 0 ;;
        d) wpctl set-volume @DEFAULT_AUDIO_SINK@ "${percent:-5}"%- && exit 0 ;;
        m) wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle && exit 0 ;;
        s) wpctl set-volume @DEFAULT_AUDIO_SINK@ "${percent:-50}"% && exit 0 ;;
        *) exit 1 ;;
    esac
}

snd_h() {
    command -v sndioctl || exit 1
    [ -n "$2" ] && percent="$2"
    case $1 in
        i) lt_100 && sndioctl -f snd/default output.level=+0.${percent:-05} ;;
        d) sndioctl -f snd/default output.level=-0.${percent:-05} ;;
        m) sndioctl -f snd/default output.mute=! ;;
        s) sndioctl -f snd/default output.level=0.${percent:-50} ;;
        *) exit 1 ;;
    esac
}

lt_100() {
    case $AUDIO in
        pulseaudio) volstat="$(pactl list sinks)" ;;
        alsa) volstat="$(amixer get Master)" ;; # ALSA only equivalent.
        pipewire) volstat="$(wpctl get-volume @DEFAULT_AUDIO_SINK@)" ;;
        sndio) volstat="$(sndioctl -f snd/default output.level)" ;;
        *) exit 1 ;;
    esac

    case $AUDIO in
        pulseaudio) vol="$(echo "$volstat" | grep '[0-9]\+%' | sed "s,.* \([0-9]\+\)%.*,\1,;1q")" ;;
        alsa) vol=$(echo "$volstat" | grep -o "\[[0-9]\+%\]" | sed "s/[^0-9]*//g;1q") ;;
        jack2) exit 1 ;;
        pipewire) vol=$(echo "$volstat" | awk '{print $2 * 100}') ;;
        sndio) vol=$(echo "$volstat" | awk -F= '{print int($2 * 100)}') ;;
        *) exit 1 ;;
    esac

    if [ "$vol" -lt "100" ]; then
        return 0 #true
    else
        return 1 #false
    fi
}

[ -z "$1" ] && printf "$USAGE_S" && exit 1

AUDIO="${AUDIO:-pipewire}" #if 'AUDIO' is not set, default to pipewire

case $AUDIO in
    pulseaudio) pa_h "$1" "$2" ;;
    alsa) a_h "$1" "$2" ;;
    jack) exit 1 ;;
    pipewire) pw_h "$1" "$2" ;; # pipewire can be used as a pulse/jack replacement, so there is really no need for its own stuff
    sndio) snd_h "$1" "$2" ;;
    *) exit 1 ;;
esac
