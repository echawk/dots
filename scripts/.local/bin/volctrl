#!/usr/bin/env sh

#usage:
#volctrl i/d/m  (increase/decrease/mute)

USAGE_S="No action provided!\n'i' - to increase\n'd' - to decrease\n'm' - to toggle mute"

pa_h(){
    command -v pactl || exit 1
    [ -n "$2" ] && percent="$2" || percent=5
    case $1 in
        # do a check to make sure the volume is less than 100
        i) lt_100 && pactl set-sink-volume 0 +"${percent}"% && exit 0;;
        d) pactl set-sink-volume 0 -"${percent}"% && exit 0;;
        m) pactl set-sink-mute 0 toggle && exit 0;;
        *) exit 1;;
    esac
}

a_h(){
    command -v amixer || exit 1
    [ -n "$2" ] && percent="$2" || percent=5
    case $1 in
        # do a check to make sure the volume is less than 100
        i) lt_100 && amixer set Master Front "${percent}"+ && exit 0;;
        d) amixer set Master Front "${percent}"- && exit 0;;
        m) amixer set Master toggle && exit 0;;
        *) exit 1;;
    esac
}

lt_100(){
    case $AUDIO in
        pulseaudio) volstat="$(pactl list sinks)";;
        alsa) volstat="$(amixer get Master)" ;; # ALSA only equivalent.
        jack2) exit 1;;
        *) exit 1;;
    esac

    case $AUDIO in
        pulseaudio) vol="$(echo "$volstat" | grep '[0-9]\+%' | sed "s,.* \([0-9]\+\)%.*,\1,;1q")";;
        alsa) vol=$(echo "$volstat" | grep -o "\[[0-9]\+%\]" | sed "s/[^0-9]*//g;1q");;
        jack2) exit 1;;
        *) exit 1;;
    esac

    if [ "$vol" -lt "100" ]; then
        return 0 #true
    else
        return 1 #false
    fi
}

[ -z "$1" ] && echo "$USAGE_S" && exit 1

AUDIO="${AUDIO:-pulseaudio}" #if 'AUDIO' is not set, default to pulseaudio

case $AUDIO in
    pulseaudio) pa_h "$1" "$2";;
    alsa) a_h "$1" "$2";;
    jack2) exit 1;;
    jack) exit 1;;
    pipewire) exit 1;; # pipewire can be used as a pulse/jack replacement, so there is really no need for its own stuff
    *) exit 1;;
esac
